regions:
- us-east-1
- global

account-blocklist:
- {{ blocked_account }}

accounts:
  {% for act in accounts %}
  {{act}}:
    presets:
    - common
    - controltower
  {% endfor %}

resource-types:
  excludes:
    - IAMSAMLProvider
    - IAMOpenIDConnectProvider
    - AppStreamImage
    - MachineLearningBranchPrediction
    - MachineLearningMLModel
    - MachineLearningEvaluation
    - MachineLearningDataSource
    - FMSPolicy
    - FMSNotificationChannel
    - RoboMakerFleet
    - RoboMakerRobot
    - RoboMakerDeploymentJob
    - OSPackage
    
presets:
  terraform:
    filters:
      S3Bucket:
      - type: glob
        value: "my-statebucket-*"
      DynamoDBTable:
      - "terraform-lock"
  common:
    filters:
      KMSAlias:
      - property: Name
        type: glob
        value: "alias/aws/*"
      IAMRole:
      - "OrganizationAccountAccessRole"
      - property: tag:protected
        value: true
      - property: Path
        value: "/aws-reserved/sso.amazonaws.com/"
      IAMRolePolicy:
      - property: tag:role:protected
        value: "true"
      ElasticacheCacheParameterGroup:
      - property: GroupName
        type: glob
        value: "default*"

  controltower:
    filters:
      IAMRole:
      - "OrganizationAccountAccessRole"
      - property: tag:managed_by
        value: "AFT"
      - property: tag:Name
        type: glob
        value: "aft*"
      - property: Name
        type: glob
        value: "aws-controltower*"
      - property: Name
        type: glob
        value: "AWSControlTower*"
      IAMRolePolicy:
      - property: role:RoleName
        type: glob
        value: "aws-controltower*"
      IAMRolePolicyAttachment:
      - property: RoleName
        type: glob
        value: "aws-controltower*"
      CloudWatchLogsLogGroup:
      - "/aws/lambda/aws-controltower-NotificationForwarder"
      - "StackSet-AWSControlTowerBP-VPC-ACCOUNT-FACTORY-*"
      LambdaFunction:
      - "aws-controltower-NotificationForwarder"

      EC2VPC:
      - property: tag:Name
        value: "aws-controltower-VPC"
      EC2Subnet:
      - property: tag:Name
        type: glob
        value: "aws-controltower-*"
      ConfigServiceConfigurationRecorder:
      - "aws-controltower-BaselineConfigRecorder"
      EC2RouteTable:
      - property: tag:Name
        type: glob
        value: "aws-controltower-PrivateSubnet*"
      EC2DHCPOption:
      - property: tag:Name
        value: "aws-controltower-DHCPOptionsSet"
      EC2VPCEndpoint:
      - property: tag:Name
        value: "aws-controltower-VPC"
      SSMParameter:
      - property: tag:Name
        type: glob
        value: "/aft/*"
      SNSTopic:
      - property: ARN
        type: glob
        value: "*aws-controltower-SecurityNotifications*"
      SNSSubscription:
      - type: glob
        value: "*aws-controltower-SecurityNotifications*"
      ConfigServiceConfigRule:
      - "AWSControlTower_*"
      CloudWatchEventsTarget:
      - property: Rule
        value: "Rule: AWSControlTowerManagedRule
      - property: Rule
        value: aws-controltower-ConfigComplianceChangeEventRule
      CloudTrailTrail:
      - aws-controltower-BaselineCloudTrail
      CloudFormationStack:
      - property: Name
        type: glob
        value: "StackSet-AWSControlTower*"
      CloudWatchEventsRule:
      - "Rule: AWSControlTowerManagedRule"
      - "Rule: StepFunctionsGetEventForCodeBuildStartBuildRule"
      - "Rule: StepFunctionsGetEventsForStepFunctionsExecutionRule"
      - "Rule: aws-controltower-ConfigComplianceChangeEventRule"
      SFNStateMachine:
      - "*aft-account-provisioning-customizations"
      CodePipelinePipeline:
      - type: glob
        value: "*customizations*"
